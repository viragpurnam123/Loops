/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.loops.generator;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.xtext.example.loops.loopsDsl.Script;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class LoopsDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    int _num = ((Script) _get).getRepeat().getNum();
    String _plus = ((("public class HelloWorld {\n\t" + 
      "public void execute() {\n\t\t") + 
      "IntStream.range(0, ") + Integer.valueOf(_num));
    String _plus_1 = (_plus + " - 1)\r\n\t\t\t\t\t\t     .forEach(index -> {");
    EObject _get_1 = resource.getContents().get(0);
    String _expression = ((Script) _get_1).getRepeat().getExpression();
    String _plus_2 = (_plus_1 + _expression);
    String _plus_3 = (_plus_2 + "});\n");
    String _plus_4 = (_plus_3 + 
      "}}");
    fsa.generateFile("Loops.java", _plus_4);
  }
}
